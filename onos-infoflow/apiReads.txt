<org.onosproject.net.behaviour.DomainIntentConfigurable: java.util.Collection getIntents()>
<org.onosproject.net.config.NetworkConfigService: java.util.Set getSubjectClasses()>
<org.onosproject.net.config.NetworkConfigService: org.onosproject.net.config.SubjectFactory getSubjectFactory(java.lang.String)>
<org.onosproject.net.config.NetworkConfigService: org.onosproject.net.config.SubjectFactory getSubjectFactory(java.lang.Class)>
<org.onosproject.net.config.NetworkConfigService: java.lang.Class getConfigClass(java.lang.String,java.lang.String)>
<org.onosproject.net.config.NetworkConfigService: java.util.Set getSubjects(java.lang.Class)>
<org.onosproject.net.config.NetworkConfigService: java.util.Set getSubjects(java.lang.Class,java.lang.Class)>
<org.onosproject.net.config.NetworkConfigService: java.util.Set getConfigs(java.lang.Object)>
<org.onosproject.net.config.NetworkConfigService: org.onosproject.net.config.Config getConfig(java.lang.Object,java.lang.Class)>
<org.onosproject.net.device.DeviceService: int getDeviceCount()>
<org.onosproject.net.device.DeviceService: int getAvailableDeviceCount()>
<org.onosproject.net.device.DeviceService: java.lang.Iterable getDevices()>
<org.onosproject.net.device.DeviceService: java.lang.Iterable getDevices(org.onosproject.net.Device$Type)>
<org.onosproject.net.device.DeviceService: java.lang.Iterable getAvailableDevices()>
<org.onosproject.net.device.DeviceService: java.lang.Iterable getAvailableDevices(org.onosproject.net.Device$Type)>
<org.onosproject.net.device.DeviceService: org.onosproject.net.Device getDevice(org.onosproject.net.DeviceId)>
<org.onosproject.net.device.DeviceService: org.onosproject.net.MastershipRole getRole(org.onosproject.net.DeviceId)>
<org.onosproject.net.device.DeviceService: java.util.List getPorts(org.onosproject.net.DeviceId)>
<org.onosproject.net.device.DeviceService: java.util.List getPortStatistics(org.onosproject.net.DeviceId)>
<org.onosproject.net.device.DeviceService: java.util.List getPortDeltaStatistics(org.onosproject.net.DeviceId)>
<org.onosproject.net.device.DeviceService: org.onosproject.net.device.PortStatistics getStatisticsForPort(org.onosproject.net.DeviceId,org.onosproject.net.PortNumber)>
<org.onosproject.net.device.DeviceService: org.onosproject.net.device.PortStatistics getDeltaStatisticsForPort(org.onosproject.net.DeviceId,org.onosproject.net.PortNumber)>
<org.onosproject.net.device.DeviceService: org.onosproject.net.Port getPort(org.onosproject.net.DeviceId,org.onosproject.net.PortNumber)>
<org.onosproject.net.device.DeviceService: org.onosproject.net.Port getPort(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.device.DeviceService: boolean isAvailable(org.onosproject.net.DeviceId)>
<org.onosproject.net.device.DeviceService: java.lang.String localStatus(org.onosproject.net.DeviceId)>
<org.onosproject.net.device.DeviceService: long getLastUpdatedInstant(org.onosproject.net.DeviceId)>
<org.onosproject.net.driver.DriverService: java.util.Set getDrivers()>
<org.onosproject.net.driver.DriverService: java.util.Set getDrivers(java.lang.Class)>
<org.onosproject.net.driver.DriverService: org.onosproject.net.driver.Driver getDriver(org.onosproject.net.DeviceId)>
<org.onosproject.net.edge.EdgePortService: boolean isEdgePoint(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.edge.EdgePortService: java.lang.Iterable getEdgePoints()>
<org.onosproject.net.edge.EdgePortService: java.lang.Iterable getEdgePoints(org.onosproject.net.DeviceId)>
<org.onosproject.net.flow.FlowRuleService: int getFlowRuleCount()>
<org.onosproject.net.flow.FlowRuleService: int getFlowRuleCount(org.onosproject.net.DeviceId)>
<org.onosproject.net.flow.FlowRuleService: java.lang.Iterable getFlowEntries(org.onosproject.net.DeviceId)>
<org.onosproject.net.flow.FlowRuleService: java.lang.Iterable getFlowEntriesByLiveType(org.onosproject.net.DeviceId,org.onosproject.net.flow.FlowEntry$FlowLiveType)>
<org.onosproject.net.flow.FlowRuleService: java.lang.Iterable getFlowEntriesByState(org.onosproject.net.DeviceId,org.onosproject.net.flow.FlowEntry$FlowEntryState)>
<org.onosproject.net.flow.FlowRuleService: java.lang.Iterable getFlowRulesById(org.onosproject.core.ApplicationId)>
<org.onosproject.net.flow.FlowRuleService: java.lang.Iterable getFlowEntriesById(org.onosproject.core.ApplicationId)>
<org.onosproject.net.flow.FlowRuleService: java.lang.Iterable getFlowRulesByGroupId(org.onosproject.core.ApplicationId,short)>
<org.onosproject.net.flow.FlowRuleService: java.lang.Iterable getFlowTableStatistics(org.onosproject.net.DeviceId)>
<org.onosproject.net.flow.FlowRuleService: long getActiveFlowRuleCount(org.onosproject.net.DeviceId)>
<org.onosproject.net.flow.FlowRuleService: boolean lambda$getFlowEntriesByState$1(org.onosproject.net.flow.FlowEntry$FlowEntryState,org.onosproject.net.flow.FlowEntry)>
<org.onosproject.net.flow.FlowRuleService: boolean lambda$getFlowEntriesByLiveType$0(org.onosproject.net.flow.FlowEntry$FlowLiveType,org.onosproject.net.flow.FlowEntry)>
<org.onosproject.net.flowobjective.FlowObjectiveService: java.util.List getNextMappings()>
<org.onosproject.net.flowobjective.FlowObjectiveService: java.util.List getPendingFlowObjectives()>
<org.onosproject.net.flowobjective.FlowObjectiveService: com.google.common.collect.ListMultimap getFilteringObjQueue()>
<org.onosproject.net.flowobjective.FlowObjectiveService: com.google.common.collect.ListMultimap getForwardingObjQueue()>
<org.onosproject.net.flowobjective.FlowObjectiveService: com.google.common.collect.ListMultimap getNextObjQueue()>
<org.onosproject.net.flowobjective.FlowObjectiveService: java.util.Map getFilteringObjQueueHead()>
<org.onosproject.net.flowobjective.FlowObjectiveService: java.util.Map getForwardingObjQueueHead()>
<org.onosproject.net.flowobjective.FlowObjectiveService: java.util.Map getNextObjQueueHead()>
<org.onosproject.net.flowobjective.FlowObjectiveService: int allocateNextId()>
<org.onosproject.net.flowobjective.FlowObjectiveService: void initPolicy(java.lang.String)>
<org.onosproject.net.group.GroupService: org.onosproject.net.group.Group getGroup(org.onosproject.net.DeviceId,org.onosproject.net.group.GroupKey)>
<org.onosproject.net.group.GroupService: java.lang.Iterable getGroups(org.onosproject.net.DeviceId,org.onosproject.core.ApplicationId)>
<org.onosproject.net.group.GroupService: java.lang.Iterable getGroups(org.onosproject.net.DeviceId)>
<org.onosproject.net.host.HostService: int getHostCount()>
<org.onosproject.net.host.HostService: java.lang.Iterable getHosts()>
<org.onosproject.net.host.HostService: org.onosproject.net.Host getHost(org.onosproject.net.HostId)>
<org.onosproject.net.host.HostService: java.util.Set getHostsByVlan(org.onlab.packet.VlanId)>
<org.onosproject.net.host.HostService: java.util.Set getHostsByMac(org.onlab.packet.MacAddress)>
<org.onosproject.net.host.HostService: java.util.Set getHostsByIp(org.onlab.packet.IpAddress)>
<org.onosproject.net.host.HostService: java.util.Set getConnectedHosts(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.host.HostService: java.util.Set getConnectedHosts(org.onosproject.net.DeviceId)>
<org.onosproject.net.host.HostService: void requestMac(org.onlab.packet.IpAddress)>
<org.onosproject.net.host.HostProbingService: void probeHost(org.onosproject.net.Host,org.onosproject.net.ConnectPoint,org.onosproject.net.host.ProbeMode)>
<org.onosproject.net.intent.IntentService: org.onosproject.net.intent.Intent getIntent(org.onosproject.net.intent.Key)>
<org.onosproject.net.intent.IntentService: java.lang.Iterable getIntents()>
<org.onosproject.net.intent.IntentService: java.lang.Iterable getIntentData()>
<org.onosproject.net.intent.IntentService: long getIntentCount()>
<org.onosproject.net.intent.IntentService: org.onosproject.net.intent.IntentState getIntentState(org.onosproject.net.intent.Key)>
<org.onosproject.net.intent.IntentService: java.util.List getInstallableIntents(org.onosproject.net.intent.Key)>
<org.onosproject.net.intent.IntentService: boolean isLocal(org.onosproject.net.intent.Key)>
<org.onosproject.net.intent.IntentService: java.lang.Iterable getPending()>
<org.onosproject.net.intf.InterfaceService: java.util.Set getInterfaces()>
<org.onosproject.net.intf.InterfaceService: org.onosproject.net.intf.Interface getInterfaceByName(org.onosproject.net.ConnectPoint,java.lang.String)>
<org.onosproject.net.intf.InterfaceService: java.util.Set getInterfacesByPort(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.intf.InterfaceService: java.util.Set getInterfacesByIp(org.onlab.packet.IpAddress)>
<org.onosproject.net.intf.InterfaceService: java.util.Set getInterfacesByVlan(org.onlab.packet.VlanId)>
<org.onosproject.net.intf.InterfaceService: org.onosproject.net.intf.Interface getMatchingInterface(org.onlab.packet.IpAddress)>
<org.onosproject.net.intf.InterfaceService: java.util.Set getMatchingInterfaces(org.onlab.packet.IpAddress)>
<org.onosproject.net.intf.InterfaceService: org.onlab.packet.VlanId getUntaggedVlanId(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.intf.InterfaceService: java.util.Set getTaggedVlanId(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.intf.InterfaceService: org.onlab.packet.VlanId getNativeVlanId(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.intf.InterfaceService: boolean isConfigured(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.intf.InterfaceService: boolean inUse(org.onlab.packet.VlanId)>
<org.onosproject.net.link.LinkService: int getLinkCount()>
<org.onosproject.net.link.LinkService: java.lang.Iterable getLinks()>
<org.onosproject.net.link.LinkService: java.lang.Iterable getActiveLinks()>
<org.onosproject.net.link.LinkService: java.util.Set getDeviceLinks(org.onosproject.net.DeviceId)>
<org.onosproject.net.link.LinkService: java.util.Set getDeviceEgressLinks(org.onosproject.net.DeviceId)>
<org.onosproject.net.link.LinkService: java.util.Set getDeviceIngressLinks(org.onosproject.net.DeviceId)>
<org.onosproject.net.link.LinkService: java.util.Set getLinks(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.link.LinkService: java.util.Set getEgressLinks(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.link.LinkService: java.util.Set getIngressLinks(org.onosproject.net.ConnectPoint)>
<org.onosproject.net.link.LinkService: org.onosproject.net.Link getLink(org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)>
<org.onosproject.net.mcast.MulticastRouteService: java.util.Set getRoutes()>
<org.onosproject.net.mcast.MulticastRouteService: org.onosproject.net.ConnectPoint fetchSource(org.onosproject.net.mcast.McastRoute)>
<org.onosproject.net.mcast.MulticastRouteService: java.util.Set fetchSinks(org.onosproject.net.mcast.McastRoute)>
<org.onosproject.net.meter.MeterService: org.onosproject.net.meter.Meter getMeter(org.onosproject.net.DeviceId,org.onosproject.net.meter.MeterId)>
<org.onosproject.net.meter.MeterService: java.util.Collection getAllMeters()>
<org.onosproject.net.meter.MeterService: java.util.Collection getMeters(org.onosproject.net.DeviceId)>
<org.onosproject.net.packet.PacketContext: boolean isHandled()>
<org.onosproject.net.packet.PacketContext: long time()>
<org.onosproject.net.packet.PacketContext: org.onosproject.net.packet.InboundPacket inPacket()>
<org.onosproject.net.packet.PacketContext: org.onosproject.net.packet.OutboundPacket outPacket()>
<org.onosproject.net.packet.PacketService: java.util.List getProcessors()>
<org.onosproject.net.packet.PacketService: java.util.List getRequests()>
<org.onosproject.net.region.RegionService: java.util.Set getRegions()>
<org.onosproject.net.region.RegionService: org.onosproject.net.region.Region getRegion(org.onosproject.net.region.RegionId)>
<org.onosproject.net.region.RegionService: org.onosproject.net.region.Region getRegionForDevice(org.onosproject.net.DeviceId)>
<org.onosproject.net.region.RegionService: java.util.Set getRegionDevices(org.onosproject.net.region.RegionId)>
<org.onosproject.net.region.RegionService: java.util.Set getRegionHosts(org.onosproject.net.region.RegionId)>
<org.onosproject.net.topology.PathService: java.util.Set getPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId)>
<org.onosproject.net.topology.PathService: java.util.Set getPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId,org.onosproject.net.topology.LinkWeigher)>
<org.onosproject.net.topology.PathService: java.util.stream.Stream getKShortestPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId)>
<org.onosproject.net.topology.PathService: java.util.stream.Stream getKShortestPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId,org.onosproject.net.topology.LinkWeigher)>
<org.onosproject.net.topology.PathService: java.util.Set getDisjointPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId)>
<org.onosproject.net.topology.PathService: java.util.Set getDisjointPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId,org.onosproject.net.topology.LinkWeigher)>
<org.onosproject.net.topology.PathService: java.util.Set getDisjointPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId,java.util.Map)>
<org.onosproject.net.topology.PathService: java.util.Set getDisjointPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId,org.onosproject.net.topology.LinkWeigher,java.util.Map)>
